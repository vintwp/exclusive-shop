generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

// default image - no-image.webp

// #region store
model Store {
  id                      Int        @id @default(autoincrement()) @map("store_id")
  name                    String     @map("store_name") @unique
  url                     String     @map("store_url")
  primaryCategories       Category[]
  additionalCategories    StoreCategories[]
  items                   Item[]
  createdAt               DateTime   @default(now()) @map("created_at")
  updatedAt               DateTime   @updatedAt @map("updated_at")
}

model StoreCategories {
  id            Int @id @default(autoincrement()) @map("store_categories_id")
  storeId       Int @map("store_id")
  categoryId    Int @map("category_id")
  store         Store @relation(fields: [storeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category      Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  assignedAt    DateTime @default(now()) @map("assigned_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@map("_store-categories")
}
// #endregion

// #region category
model Category {
  id                Int      @id @default(autoincrement()) @map("category_id")
  name              String   @map("category_name") @unique
  primaryStoreId    Int      @map("primary_store_id")
  primaryStore      Store    @relation(fields: [primaryStoreId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  additionalStores  StoreCategories[]
  brands            CategoryBrands[]
  items             Item[]
  displayOnMainPage Boolean  @default(false) @map("display_on_main_page")
  image             String   @map("category_logo")
  url               String   @map("category_url")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
}

model CategoryBrands {
  id            Int @id @default(autoincrement())
  categoryId    Int @map("category_id")
  brandId       Int @map("brand_id")
  category      Category @relation(fields: [categoryId], references: [id])
  brand         Brand @relation(fields: [brandId], references: [id])
  assignedAt    DateTime @default(now()) @map("assigned_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@map("_category-brands")
}
// #endregion

// #region brand
model Brand {
  id         Int      @id @default(autoincrement())
  name       String   @map("brand_name")
  url        String   @map("brand_url")
  image      String   @map("brand_logo")
  categories CategoryBrands[]
  items      Item[]
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
}
// #endregion

// #region item

model Item {
  id            Int @id @default(autoincrement())
  name          String @unique
  url           String
  brand         Brand @relation(fields: [brandId], references: [id]) 
  brandId       Int
  category      Category @relation(fields: [categoryId], references: [id]) 
  categoryId    Int
  store         Store @relation(fields: [storeId], references: [id]) 
  storeId       Int
  price         Int
  priceDiscount Int
  ourItem       Boolean @default(false) @map("our_item")
  itemGroup     ItemGroup @relation(fields: [itemGroupId], references: [id])
  itemGroupId   Int @map("item_group_key")
  images        ItemImage?
  specification ItemSpec?
  text          ItemText?
  forSale       ItemForSales?
  bestSeller    ItemsBestSellers?
  itemStock     ItemStock?
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")
}

model ItemGroup {
  id          Int @id @default(autoincrement())
  name        String @unique @map("group_key")
  optionKeys  String[]
  items       Item[]
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")
	@@map("item_group")
}

model ItemImage {
  id          Int @id @default(autoincrement())
  images      String[] @default(["no-image.webp"])
  item        Item  @relation(fields: [itemId], references: [id])
  itemId      Int   @unique
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")
	@@map("item_image")
}

model ItemSpec {
  id              Int @id @default(autoincrement())
  specification   Json? @map("specs")
  item            Item?  @relation(fields: [itemId], references: [id])
  itemId          Int?   @unique
  @@map("item_specification")
}

model ItemText {
  id      Int @id @default(autoincrement())
  text    Json?
  item    Item?  @relation(fields: [itemId], references: [id])
  itemId  Int?   @unique

  @@map("item_text")
}

model ItemForSales {
  id      Int   @id @default(autoincrement())
  item    Item  @relation(fields: [itemId], references: [id])
  itemId  Int   @unique 

  @@map("items_for_sales")
}

model ItemStock {
  id        Int   @id @default(autoincrement())
  stockQty  Int   @default(0)
  item      Item  @relation(fields: [itemId], references: [id])
  itemId    Int   @unique

  @@map("item_stock")
}

model ItemsBestSellers {
  id  Int @id @default(autoincrement())
  item    Item  @relation(fields: [itemId], references: [id])
  itemId  Int   @unique

  @@map("items_best_sellers")
}

// #endregion

// #region user

model User {
  id        Int       @id @default(autoincrement())
  oauthId   String?   @unique
  email     String    @unique
  password  String?
  name      String?   @map("first_name")
  lastName  String?   @map("last_name")
  adress    String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// #endregion


